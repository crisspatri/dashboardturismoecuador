<!DOCTYPE html>
<html>
  <head>    
    <meta http-equiv="Content-type" content="text/html; charset=utf-8">
    <title>Ejemplo de dashboard</title>
   <!--<script type="text/javascript" src="d3/d3.v2.js"></script>-->
    <script src="http://d3js.org/d3.v2.js"></script>

<!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">

<meta name="viewport" content="width=device-width, initial-scale=1">


    <style type="text/css">

#pieChart {    
	/*position:absolute;
	top:10px;
	left:10px;*/
	width:400px;
	height: 400px; 
}

#lineChart {    
	/*position:absolute;
	top:10px;
	left:410px;*/
	height: 150px;
}

#barChart {
	/*position:absolute;
	top:160px;
	left:410px;*/
	height: 250px;
}

.slice {
   font-size: 12pt;
   font-family: Verdana;
   fill: white; //svg specific - instead of color
   font-weight: bold;	
  		} 

/*for line chart*/
.axis path, .axis line {
    fill: none;
    stroke: black;
    shape-rendering: crispEdges; //The shape-rendering property is an SVG attribute, used here to make sure our axis and its tick mark lines are pixel-perfect. 
}

.line {
  fill: none;
  /*stroke: steelblue;*/
  stroke-width: 3px;
}

.dot {
  /*fill: white;*/
  /*stroke: steelblue;*/
  stroke-width: 1.5px;
  }
				

.axis text {
    font-family: Verdana;
    font-size: 11px;
}

.title {
	 font-family: Verdana;
    font-size: 15px;	
		
}

.xAxis {
    font-family: verdana;
    font-size: 11px;
    fill: black;
}  

.yAxis {
    font-family: verdana;
    font-size: 11px;
    fill: white;
}

  
table {
	border-collapse:collapse;
	border: 0px;	
	font-family: Verdana;	
	color: #5C5558;
	font-size: 12px;
	text-align: right;			
}

td {
	padding-left: 10px;		
}

#lineChartTitle1 {
	font-family: Verdana;
	font-size  : 14px;
	fill       : lightgrey;
	font-weight: bold;
	text-anchor: middle;
}

#lineChartTitle2 {
	font-family: Verdana;
	font-size  : 72px;
	fill       : grey;
	text-anchor: middle;
	font-weight: bold;
	/*font-style: italic;*/
}
				 
    </style>
  </head>
  <body>

<!-- celulares peque침os ocupa las 12 columnas!-->

  	<!-- <section class="col-xs-12">
	 	<div class="col-xs-12" id="pieChart"></div> 
	      	</section>

  	<section class="col-xs-12">
  		
		<div class="col-xs-12" id="barChart"></div>  
  	</section>

  	<section class="col-xs-12">
  		
	    <div class="col-xs-12" id="lineChart"></div>
  	</section> -->

<section class="row">
	<div class="col-xs-12 col-md-4" id="pieChart"></div> 
	<div class="col-xs-12 col-md-4" id="barChart"></div> 
	<div class="col-xs-12 col-md-4" id="lineChart"></div>
</section>


    <script type="text/javascript">


  
    
/*
################ FORMATOS ##################
-------------------------------------------
*/

var 	formatAsPercentage = d3.format("%"),
		formatAsPercentage1Dec = d3.format(".1%"),
		formatAsInteger = d3.format(","),
		fsec = d3.time.format("%S s"),
		fmin = d3.time.format("%M m"),
		fhou = d3.time.format("%H h"),
		fwee = d3.time.format("%a"),
		fdat = d3.time.format("%d d"),
		fmon = d3.time.format("%b")
		;

/*
############# Tarta ###################
-------------------------------------------
*/

function dsPieChart(){

	var dataset = [
			{category: "Samuel", measure: 0.30},
	      {category: "Pedro", measure: 0.25},
	      {category: "Juan", measure: 0.15},
	      {category: "Rita", measure: 0.05},
	      {category: "Leonor", measure: 0.18},
	      {category: "Pablo", measure:0.04},
	      {category: "Maite", measure: 0.03}
	      ]
	      ;

	var 	width = 400,
		   height = 400,
		   outerRadius = Math.min(width, height) / 2,
		   innerRadius = outerRadius * .999,   
		   // animaci칩n
		   innerRadiusFinal = outerRadius * .5,
		   innerRadiusFinal3 = outerRadius* .45,
		   color = d3.scale.category20()    //gama de colores
		   ;
	    
	var vis = d3.select("#pieChart")
	     .append("svg:svg")              //crea el SVG dentro de <body>
	     .data([dataset])                   
	         .attr("width", width)          
	         .attr("height", height)
	     		.append("svg:g")                //grupo para poner la tarta
	         .attr("transform", "translate(" + outerRadius + "," + outerRadius + ")") 
				;
				
   var arc = d3.svg.arc()              //cra los elementos <path> para los arcos de los datos
        	.outerRadius(outerRadius).innerRadius(innerRadius);
   
   // para la animaci칩n
   var arcFinal = d3.svg.arc().innerRadius(innerRadiusFinal).outerRadius(outerRadius);
	var arcFinal3 = d3.svg.arc().innerRadius(innerRadiusFinal3).outerRadius(outerRadius);

   var pie = d3.layout.pie()  
        .value(function(d) { return d.measure; });    

   var arcs = vis.selectAll("g.slice")     
        .data(pie)                          
        .enter()                           
            .append("svg:g")               
               .attr("class", "slice")    
               .on("mouseover", mouseover)
    				.on("mouseout", mouseout)
    				.on("click", up)
    				;
    				
        arcs.append("svg:path")
               .attr("fill", function(d, i) { return color(i); } ) 
               .attr("d", arc)     
					.append("svg:title") 
				   .text(function(d) { return d.data.category + ": " + formatAsPercentage(d.data.measure); });			

        d3.selectAll("g.slice").selectAll("path").transition()
			    .duration(750)
			    .delay(10)
			    .attr("d", arcFinal )
			    ;
	
	  // A침ade una etiqueda a los arcos mayores, las traslada al centroide y las rota
	  // fuente: http://bl.ocks.org/1305337#index.html
	  arcs.filter(function(d) { return d.endAngle - d.startAngle > .2; })
	  		.append("svg:text")
	      .attr("dy", ".35em")
	      .attr("text-anchor", "middle")
	      .attr("transform", function(d) { return "translate(" + arcFinal.centroid(d) + ")rotate(" + angle(d) + ")"; })
	      //.text(function(d) { return formatAsPercentage(d.value); })
	      .text(function(d) { return d.data.category; })
	      ;
	   
	   // Calcula le angulo para la etiqueta comvirtiendo de radianes a grados
		function angle(d) {
		    var a = (d.startAngle + d.endAngle) * 90 / Math.PI - 90;
		    return a > 90 ? a - 180 : a;
		}
		    
		
		// Titulo de la tarta			
		vis.append("svg:text")
	     	.attr("dy", ".35em")
	      .attr("text-anchor", "middle")
	      .text("Cuota de ingresos 2015")
	      .attr("class","title")
	      ;		    


		
	function mouseover() {
	  d3.select(this).select("path").transition()
	      .duration(750)
	        		.attr("d", arcFinal3)
	        		;
	}
	
	function mouseout() {
	  d3.select(this).select("path").transition()
	      .duration(750)
	        		.attr("d", arcFinal)
	        		;
	}
	
	function up(d, i) {
				updateBarChart(d.data.category, color(i));
				updateLineChart(d.data.category, color(i));
	}
}

dsPieChart();

/*
############# BARRAS ###################
-------------------------------------------
*/



var datasetBarChart = [
{ group: "All", category: "Naranjas", measure: 63850.4963 }, 
{ group: "All", category: "Manzanas", measure: 78258.0845 }, 
{ group: "All", category: "Uvas", measure: 60610.2355 }, 
{ group: "All", category: "Higos", measure: 30493.1686 }, 
{ group: "All", category: "Mangos", measure: 56097.0151 }, 
{ group: "Samuel", category: "Naranjas", measure: 19441.5648 }, 
{ group: "Samuel", category: "Manzanas", measure: 25922.0864 }, 
{ group: "Samuel", category: "Uvas", measure: 9720.7824 }, 
{ group: "Samuel", category: "Higos", measure: 6480.5216 }, 
{ group: "Samuel", category: "Mangos", measure: 19441.5648 }, 
{ group: "Pedro", category: "Naranjas", measure: 22913.2728 }, 
{ group: "Pedro", category: "Manzanas", measure: 7637.7576 }, 
{ group: "Pedro", category: "Uvas", measure: 23549.7526 }, 
{ group: "Pedro", category: "Higos", measure: 1909.4394 }, 
{ group: "Pedro", category: "Mangos", measure: 7637.7576 }, 
{ group: "Juan", category: "Naranjas", measure: 1041.5124 }, 
{ group: "Juan", category: "Manzanas", measure: 2430.1956 }, 
{ group: "Juan", category: "Uvas", measure: 15275.5152 }, 
{ group: "Juan", category: "Higos", measure: 4166.0496 }, 
{ group: "Juan", category: "Mangos", measure: 11803.8072 }, 
{ group: "Rita", category: "Naranjas", measure: 7406.3104 }, 
{ group: "Rita", category: "Manzanas", measure: 2545.9192 }, 
{ group: "Rita", category: "Uvas", measure: 1620.1304 }, 
{ group: "Rita", category: "Higos", measure: 8563.5464 }, 
{ group: "Rita", category: "Mangos", measure: 3008.8136 }, 
{ group: "Leonor", category: "Naranjas", measure: 7637.7576 }, 
{ group: "Leonor", category: "Manzanas", measure: 35411.4216 }, 
{ group: "Leonor", category: "Uvas", measure: 8332.0992 }, 
{ group: "Leonor", category: "Higos", measure: 6249.0744 }, 
{ group: "Leonor", category: "Mangos", measure: 11803.8072 }, 
{ group: "Pablo", category: "Naranjas", measure: 3182.399 }, 
{ group: "Pablo", category: "Manzanas", measure: 867.927 }, 
{ group: "Pablo", category: "Uvas", measure: 1808.18125 }, 
{ group: "Pablo", category: "Higos", measure: 795.59975 }, 
{ group: "Pablo", category: "Mangos", measure: 578.618 }, 
{ group: "Maite", category: "Naranjas", measure: 2227.6793 }, 
{ group: "Maite", category: "Manzanas", measure: 3442.7771 }, 
{ group: "Maite", category: "Uvas", measure: 303.77445 }, 
{ group: "Maite", category: "Higos", measure: 2328.93745 }, 
{ group: "Maite", category: "Mangos", measure: 1822.6467 }, 
]
;

// establece el grupo inicial
var group = "All";

function datasetBarChosen(group) {
	var ds = [];
	for (x in datasetBarChart) {
		 if(datasetBarChart[x].group==group){
		 	ds.push(datasetBarChart[x]);
		 } 
		}
	return ds;
}


function dsBarChartBasics() {

		var margin = {top: 30, right: 5, bottom: 20, left: 50},
		width = 500 - margin.left - margin.right,
	   height = 250 - margin.top - margin.bottom,
		colorBar = d3.scale.category20(),
		barPadding = 1
		;
		
		return {
			margin : margin, 
			width : width, 
			height : height, 
			colorBar : colorBar, 
			barPadding : barPadding
		}			
		;
}

function dsBarChart() {

	var firstDatasetBarChart = datasetBarChosen(group);         	
	
	var basics = dsBarChartBasics();
	
	var margin = basics.margin,
		width = basics.width,
	   height = basics.height,
		colorBar = basics.colorBar,
		barPadding = basics.barPadding
		;
					
	var 	xScale = d3.scale.linear()
						.domain([0, firstDatasetBarChart.length])
						.range([0, width])
						;
		  
	var yScale = d3.scale.linear()
		   .domain([0, d3.max(firstDatasetBarChart, function(d) { return d.measure; })])
		   .range([height, 0])
		   ;
	
	
	var svg = d3.select("#barChart")
			.append("svg")
		    .attr("width", width + margin.left + margin.right)
		    .attr("height", height + margin.top + margin.bottom)
		    .attr("id","barChartPlot")
		    ;
	
	var plot = svg
		    .append("g")
		    .attr("transform", "translate(" + margin.left + "," + margin.top + ")")
		    ;
	            
	plot.selectAll("rect")
		   .data(firstDatasetBarChart)
		   .enter()
		   .append("rect")
			.attr("x", function(d, i) {
			    return xScale(i);
			})
		   .attr("width", width / firstDatasetBarChart.length - barPadding)   
			.attr("y", function(d) {
			    return yScale(d.measure);
			})  
			.attr("height", function(d) {
			    return height-yScale(d.measure);
			})
			.attr("fill", "lightgrey")
			;
	
		
	plot.selectAll("text")
	.data(firstDatasetBarChart)
	.enter()
	.append("text")
	.text(function(d) {
			return formatAsInteger(d3.round(d.measure));
	})
	.attr("text-anchor", "middle")
	.attr("x", function(d, i) {
			return (i * (width / firstDatasetBarChart.length)) + ((width / firstDatasetBarChart.length - barPadding) / 2);
	})
	.attr("y", function(d) {
			return yScale(d.measure) + 14;
	})
	.attr("class", "yAxis")
	;
	

	var xLabels = svg
		    .append("g")
		    .attr("transform", "translate(" + margin.left + "," + (margin.top + height)  + ")")
		    ;
	
	xLabels.selectAll("text.xAxis")
		  .data(firstDatasetBarChart)
		  .enter()
		  .append("text")
		  .text(function(d) { return d.category;})
		  .attr("text-anchor", "middle")
			// posicion x a partir del borde izquierdo m치s la mitad de la anchura de la barra
						   .attr("x", function(d, i) {
						   		return (i * (width / firstDatasetBarChart.length)) + ((width / firstDatasetBarChart.length - barPadding) / 2);
						   })
		  .attr("y", 15)
		  .attr("class", "xAxis")
		  ;			
	 
	// Titulo
	
	svg.append("text")
		.attr("x", (width + margin.left + margin.right)/2)
		.attr("y", 15)
		.attr("class","title")				
		.attr("text-anchor", "middle")
		.text("Ventas desglosadas 2015")
		;
}

dsBarChart();

 /* ** Actualizaciones ** */
 
function updateBarChart(group, colorChosen) {
	
		var currentDatasetBarChart = datasetBarChosen(group);
		
		var basics = dsBarChartBasics();
	
		var margin = basics.margin,
			width = basics.width,
		   height = basics.height,
			colorBar = basics.colorBar,
			barPadding = basics.barPadding
			;
		
		var 	xScale = d3.scale.linear()
			.domain([0, currentDatasetBarChart.length])
			.range([0, width])
			;
		
			
		var yScale = d3.scale.linear()
	      .domain([0, d3.max(currentDatasetBarChart, function(d) { return d.measure; })])
	      .range([height,0])
	      ;
	      
	   var svg = d3.select("#barChart svg");
	      
	   var plot = d3.select("#barChartPlot")
	   	.datum(currentDatasetBarChart)
		   ;
	
	  	plot.selectAll("rect")
	      .data(currentDatasetBarChart)
	      .transition()
			.duration(750)
			.attr("x", function(d, i) {
			    return xScale(i);
			})
		   .attr("width", width / currentDatasetBarChart.length - barPadding)   
			.attr("y", function(d) {
			    return yScale(d.measure);
			})  
			.attr("height", function(d) {
			    return height-yScale(d.measure);
			})
			.attr("fill", colorChosen)
			;
		
		plot.selectAll("text.yAxis") 
 		    .data(currentDatasetBarChart)
			.transition()
			.duration(750)
		   .attr("text-anchor", "middle")
		   .attr("x", function(d, i) {
		   		return (i * (width / currentDatasetBarChart.length)) + ((width / currentDatasetBarChart.length - barPadding) / 2);
		   })
		   .attr("y", function(d) {
		   		return yScale(d.measure) + 14;
		   })
		   .text(function(d) {
				return formatAsInteger(d3.round(d.measure));
		   })
		   .attr("class", "yAxis")					 
		;
		

		svg.selectAll("text.title") 
			.attr("x", (width + margin.left + margin.right)/2)
			.attr("y", 15)
			.attr("class","title")				
			.attr("text-anchor", "middle")
			.text(group + ": Desglose de ventas 2015")
		;
}


/*
############# Diagrama de lineas ##################
-------------------------------------------
*/

var datasetLineChart = [
{ group: "All", category: 2008, measure: 289309 }, 
{ group: "All", category: 2009, measure: 234998 }, 
{ group: "All", category: 2010, measure: 310900 }, 
{ group: "All", category: 2011, measure: 223900 }, 
{ group: "All", category: 2012, measure: 234500 }, 
{ group: "Samuel", category: 2008, measure: 81006.52 }, 
{ group: "Samuel", category: 2009, measure: 70499.4 }, 
{ group: "Samuel", category: 2010, measure: 96379 }, 
{ group: "Samuel", category: 2011, measure: 64931 }, 
{ group: "Samuel", category: 2012, measure: 70350 }, 
{ group: "Pedro", category: 2008, measure: 63647.98 }, 
{ group: "Pedro", category: 2009, measure: 61099.48 }, 
{ group: "Pedro", category: 2010, measure: 87052 }, 
{ group: "Pedro", category: 2011, measure: 58214 }, 
{ group: "Pedro", category: 2012, measure: 58625 }, 
{ group: "Rita", category: 2008, measure: 23144.72 }, 
{ group: "Rita", category: 2009, measure: 14099.88 }, 
{ group: "Rita", category: 2010, measure: 15545 }, 
{ group: "Rita", category: 2011, measure: 11195 }, 
{ group: "Rita", category: 2012, measure: 11725 }, 
{ group: "Juan", category: 2008, measure: 34717.08 }, 
{ group: "Juan", category: 2009, measure: 30549.74 }, 
{ group: "Juan", category: 2010, measure: 34199 }, 
{ group: "Juan", category: 2011, measure: 33585 }, 
{ group: "Juan", category: 2012, measure: 35175 }, 
{ group: "Leonor", category: 2008, measure: 69434.16 }, 
{ group: "Leonor", category: 2009, measure: 46999.6 }, 
{ group: "Leonor", category: 2010, measure: 62180 }, 
{ group: "Leonor", category: 2011, measure: 40302 }, 
{ group: "Leonor", category: 2012, measure: 42210 }, 
{ group: "Pablo", category: 2008, measure: 7232.725 }, 
{ group: "Pablo", category: 2009, measure: 4699.96 }, 
{ group: "Pablo", category: 2010, measure: 6218 }, 
{ group: "Pablo", category: 2011, measure: 8956 }, 
{ group: "Pablo", category: 2012, measure: 9380 }, 
{ group: "Maite", category: 2008, measure: 10125.815 }, 
{ group: "Maite", category: 2009, measure: 7049.94 }, 
{ group: "Maite", category: 2010, measure: 9327 }, 
{ group: "Maite", category: 2011, measure: 6717 }, 
{ group: "Maite", category: 2012, measure: 7035 }
]
;

var group = "All";

function datasetLineChartChosen(group) {
	var ds = [];
	for (x in datasetLineChart) {
		 if(datasetLineChart[x].group==group){
		 	ds.push(datasetLineChart[x]);
		 } 
		}
	return ds;
}

function dsLineChartBasics() {

	var margin = {top: 20, right: 10, bottom: 0, left: 50},
	    width = 500 - margin.left - margin.right,
	    height = 150 - margin.top - margin.bottom
	    ;
		
		return {
			margin : margin, 
			width : width, 
			height : height
		}			
		;
}


function dsLineChart() {

	var firstDatasetLineChart = datasetLineChartChosen(group);    
	
	var basics = dsLineChartBasics();
	
	var margin = basics.margin,
		width = basics.width,
	   height = basics.height
		;

	var xScale = d3.scale.linear()
	    .domain([0, firstDatasetLineChart.length-1])
	    .range([0, width])
	    ;

	var yScale = d3.scale.linear()
	    .domain([0, d3.max(firstDatasetLineChart, function(d) { return d.measure; })])
	    .range([height, 0])
	    ;
	
	var line = d3.svg.line()
	    .x(function(d, i) { return xScale(i); })
	    .y(function(d) { return yScale(d.measure); })
	    ;
	
	var svg = d3.select("#lineChart").append("svg")
	    .datum(firstDatasetLineChart)
	    .attr("width", width + margin.left + margin.right)
	    .attr("height", height + margin.top + margin.bottom)
	    // crear un grupo y moverlo para que se conserven los m치rgenes para los ejes y el t칤tulo
	    
	var plot = svg
	    .append("g")
	    .attr("transform", "translate(" + margin.left + "," + margin.top + ")")
	    .attr("id", "lineChartPlot")
	    ;

		/* titulos descriptivos - inicio */
	var dsLength=firstDatasetLineChart.length;

	plot.append("text")
		.text(firstDatasetLineChart[dsLength-1].measure)
		.attr("id","lineChartTitle2")
		.attr("x",width/2)
		.attr("y",height/2)	
		;
	/* titulos descriptivos - fin */
	    
	plot.append("path")
	    .attr("class", "line")
	    .attr("d", line)	
	    // add color
		.attr("stroke", "lightgrey")
	    ;
	  
	plot.selectAll(".dot")
	    .data(firstDatasetLineChart)
	  	 .enter().append("circle")
	    .attr("class", "dot")
	    .attr("fill", function (d) { return d.measure==d3.min(firstDatasetLineChart, function(d) { return d.measure; }) ? "red" : (d.measure==d3.max(firstDatasetLineChart, function(d) { return d.measure; }) ? "green" : "white") } )
	    .attr("cx", line.x())
	    .attr("cy", line.y())
	    .attr("r", 3.5)
	    .attr("stroke", "lightgrey")
	    .append("title")
	    .text(function(d) { return d.category + ": " + formatAsInteger(d.measure); })
	    ;

	svg.append("text")
		.text("Resultados en 2015")
		.attr("id","lineChartTitle1")	
		.attr("x",margin.left + ((width + margin.right)/2))
		.attr("y", 10)
		;

}

dsLineChart();


 /* ** Actualizar el grafico ** */
 
function updateLineChart(group, colorChosen) {

	var currentDatasetLineChart = datasetLineChartChosen(group);   

	var basics = dsLineChartBasics();
	
	var margin = basics.margin,
		width = basics.width,
	   height = basics.height
		;

	var xScale = d3.scale.linear()
	    .domain([0, currentDatasetLineChart.length-1])
	    .range([0, width])
	    ;

	var yScale = d3.scale.linear()
	    .domain([0, d3.max(currentDatasetLineChart, function(d) { return d.measure; })])
	    .range([height, 0])
	    ;
	
	var line = d3.svg.line()
    .x(function(d, i) { return xScale(i); })
    .y(function(d) { return yScale(d.measure); })
    ;

   var plot = d3.select("#lineChartPlot")
   	.datum(currentDatasetLineChart)
	   ;
	   
	/* titulos descriptivos - inicio */
	var dsLength=currentDatasetLineChart.length;
	
	plot.select("text")
		.text(currentDatasetLineChart[dsLength-1].measure)
		;
	/* titulos descriptivos -  fin */
	   
	plot
	.select("path")
		.transition()
		.duration(750)			    
	   .attr("class", "line")
	   .attr("d", line)	
	   // add color
		.attr("stroke", colorChosen)
	   ;
	   
	var path = plot
		.selectAll(".dot")
	   .data(currentDatasetLineChart)
	   .transition()
		.duration(750)
	   .attr("class", "dot")
	   .attr("fill", function (d) { return d.measure==d3.min(currentDatasetLineChart, function(d) { return d.measure; }) ? "red" : (d.measure==d3.max(currentDatasetLineChart, function(d) { return d.measure; }) ? "green" : "white") } )
	   .attr("cx", line.x())
	   .attr("cy", line.y())
	   .attr("r", 3.5)
	   // add color
		.attr("stroke", colorChosen)
	   ;
	   
	   path
	   .selectAll("title")
	   .text(function(d) { return d.category + ": " + formatAsInteger(d.measure); })	 
	   ;  

}

    </script>
  </body>
</html>
